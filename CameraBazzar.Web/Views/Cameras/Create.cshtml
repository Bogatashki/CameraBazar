@model CameraBazar.Models.Models.Camera

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Camera</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-row">
            @Html.LabelFor(model => model.Make, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Make, "Choose Make ...", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Make, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row">
            @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row">
            @Html.LabelFor(model => model.MinShutterSpeed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MinShutterSpeed, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MinShutterSpeed, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row">
            @Html.LabelFor(model => model.MaxShutterSpeed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaxShutterSpeed, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MaxShutterSpeed, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row">
            @Html.LabelFor(model => model.MinIso, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MinIso, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MinIso, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row">
            @Html.LabelFor(model => model.MaxIso, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaxIso, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MaxIso, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row">
            @Html.LabelFor(model => model.IsFullFrame, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="custom-radio">
                    @Html.RadioButtonFor(model => model.IsFullFrame, true, new { @class = "text-danger", @checked = true }) Yes
                    @Html.RadioButtonFor(model => model.IsFullFrame, false, new { @class = "text-danger" }) No

                </div>
            </div>
        </div>

        <div class="form-row">
            @Html.LabelFor(model => model.VideoResolution, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VideoResolution, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VideoResolution, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row">
            <div class="control-label col-md-2">
                @Html.Name("Light-Metering")
            </div>
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.Spot, new { @class = "text-danger" }) Spot
                @Html.ValidationMessageFor(model => model.Spot, "", new { @class = "text-danger" })
                @Html.CheckBoxFor(model => model.CenterWeighted, new { @class = "text-danger" }) Center-Weighted
                @Html.ValidationMessageFor(model => model.CenterWeighted, "", new { @class = "text-danger" })
                @Html.CheckBoxFor(model => model.Evaluative, new { @class = "text-danger" }) Evaluative
                @Html.ValidationMessageFor(model => model.Evaluative, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row">
            @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div>
            @Html.HiddenFor(model => model.ApplicationUser)
        </div>

        <div class="form-row">
            <div class="float-md-right">
                <input type="submit" value="Add" class="btn btn-lg btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
